// <auto-generated />
using System;
using Bono.Employees.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bono.Employees.Infrastructure.Data.Migrations
{
    [DbContext(typeof(BonoEmployeeContext))]
    [Migration("20240301012938_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bono.Employees.Domain.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 29, 22, 29, 38, 276, DateTimeKind.Local).AddTicks(3828));

                    b.Property<string>("DateOfJoining")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("TypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Bono.Employees.Domain.Entities.EmployeeType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 29, 22, 29, 38, 277, DateTimeKind.Local).AddTicks(5951));

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("EmployeeType");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d37266d0-6f16-4eac-8489-687485f05816"),
                            DateCreated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(6920),
                            DateUpdated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(7245),
                            IsDeleted = false,
                            Type = "Trainee"
                        },
                        new
                        {
                            Id = new Guid("63ee719c-0fee-4671-8a3b-5029a6cac4dd"),
                            DateCreated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(8019),
                            DateUpdated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(8022),
                            IsDeleted = false,
                            Type = "Assistant"
                        },
                        new
                        {
                            Id = new Guid("a4900ccf-aced-410a-a955-d5fe00e5a9b8"),
                            DateCreated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(8025),
                            DateUpdated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(8026),
                            IsDeleted = false,
                            Type = "Analyst"
                        },
                        new
                        {
                            Id = new Guid("d26d8f45-e2f4-401c-bab3-be3655873d23"),
                            DateCreated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(8028),
                            DateUpdated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(8029),
                            IsDeleted = false,
                            Type = "Leader"
                        },
                        new
                        {
                            Id = new Guid("ebcfaebb-4ee2-49bb-a70a-0720cf0c2470"),
                            DateCreated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(8031),
                            DateUpdated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(8032),
                            IsDeleted = false,
                            Type = "Manager"
                        },
                        new
                        {
                            Id = new Guid("e90864ba-a7b1-47aa-9405-b32dc579e78c"),
                            DateCreated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(8034),
                            DateUpdated = new DateTime(2024, 2, 29, 22, 29, 38, 283, DateTimeKind.Local).AddTicks(8035),
                            IsDeleted = false,
                            Type = "CEO"
                        });
                });

            modelBuilder.Entity("Bono.Employees.Domain.Entities.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 29, 22, 29, 38, 277, DateTimeKind.Local).AddTicks(6190));

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Bono.Employees.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 29, 22, 29, 38, 277, DateTimeKind.Local).AddTicks(6338));

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEndDateUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("bono@teste");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("371e3928-8931-48e6-aaa6-7ec96270d3db"),
                            AccessFailedCount = 0,
                            Cpf = "123.456.456-56",
                            DateCreated = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "richiebono@gmail.com",
                            EmailConfirmed = false,
                            FirstName = "Richard Bono",
                            IsDeleted = false,
                            LastName = "Oliveira",
                            LockoutEnabled = false,
                            Password = "23D42F5F3F66498B2C8FF4C20B8C5AC826E47146",
                            PhoneNumber = "+55 11-98547-3851",
                            PhoneNumberConfirmed = false,
                            TwoFactorEnabled = false,
                            UserName = "Richard Bono"
                        });
                });

            modelBuilder.Entity("Bono.Employees.Domain.Entities.UserRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2024, 2, 29, 22, 29, 38, 277, DateTimeKind.Local).AddTicks(6492));

                    b.Property<DateTime?>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Bono.Employees.Domain.Entities.Employee", b =>
                {
                    b.HasOne("Bono.Employees.Domain.Entities.EmployeeType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId");

                    b.HasOne("Bono.Employees.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Bono.Employees.Domain.Entities.UserRole", b =>
                {
                    b.HasOne("Bono.Employees.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");

                    b.HasOne("Bono.Employees.Domain.Entities.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
